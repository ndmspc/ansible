---
- name: "Handle on kind nodes changes"
  tags:
    - install
  block:
    - name: "Copy certificate to {{ node_item }}"
      when: registry_ssl | bool
      ansible.builtin.command: "{{ container_tool }} cp {{ registry_cert_dir }}/domain.crt {{ node_item }}:/usr/local/share/ca-certificates/ca.crt"
      changed_when: true

    - name: "Update certificates in {{ node_item }}"
      when: registry_ssl | bool
      ansible.builtin.command: "{{ container_tool }} exec {{ node_item }} update-ca-certificates --fresh"
      changed_when: true

    - name: "Restart containerd in {{ node_item }}"
      when: registry_ssl | bool
      ansible.builtin.command: "{{ container_tool }} exec {{ node_item }} systemctl restart containerd"
      changed_when: true

    - name: "Apply hosts settings to {{ node_item }}"
      when: registry_ssl | bool
      ansible.builtin.command: "{{ container_tool }} exec -t {{ node_item }} /bin/bash -c 'echo {{ registry_ip }} {{ registry_hostname }} >> /etc/hosts'"
      changed_when: true

    # - name: "Generating hosts.toml for registry file to {{ my_cluster_wk_dir ~ '/hosts.toml' }}"
    #   ansible.builtin.template:
    #     src: hosts.toml.j2
    #     dest: "{{ my_cluster_wk_dir }}/hosts.toml"
    #     mode: "0644"
    #
    # - name: "Create /etc/containerd/certs.d/localhost:{{ registry_port ~ ' in ' ~ node_item }}"
    #   ansible.builtin.command: "{{ container_tool }} exec {{ node_item }} mkdir -p /etc/containerd/certs.d/localhost:{{ registry_port }}"
    #   changed_when: true
    #
    # - name: "Copy hosts.toml to {{ node_item }}"
    #   ansible.builtin.command: >
    #     {{ container_tool }} cp {{ my_cluster_wk_dir }}/hosts.toml {{ node_item }}:/etc/containerd/certs.d/localhost:{{ registry_port }}/hosts.toml
    #   changed_when: true
